{
  "pluginId": "programming-language",
  "version": "current",
  "label": "Next",
  "banner": null,
  "badge": false,
  "noIndex": false,
  "className": "docs-version-current",
  "isLast": true,
  "docsSidebars": {
    "tutorialSidebar": [
      {
        "type": "link",
        "label": "Home",
        "href": "/programming-language/",
        "docId": "home"
      },
      {
        "type": "category",
        "label": "C",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "简介",
            "href": "/programming-language/C/简介",
            "docId": "C/简介"
          },
          {
            "type": "link",
            "label": "语法",
            "href": "/programming-language/C/语法",
            "docId": "C/语法"
          },
          {
            "type": "link",
            "label": "变量",
            "href": "/programming-language/C/变量",
            "docId": "C/变量"
          },
          {
            "type": "link",
            "label": "运算符",
            "href": "/programming-language/C/运算符",
            "docId": "C/运算符"
          },
          {
            "type": "link",
            "label": "流程控制",
            "href": "/programming-language/C/流程控制",
            "docId": "C/流程控制"
          },
          {
            "type": "link",
            "label": "数据类型",
            "href": "/programming-language/C/数据类型",
            "docId": "C/数据类型"
          },
          {
            "type": "link",
            "label": "指针",
            "href": "/programming-language/C/指针",
            "docId": "C/指针"
          },
          {
            "type": "link",
            "label": "函数",
            "href": "/programming-language/C/函数",
            "docId": "C/函数"
          },
          {
            "type": "link",
            "label": "数组",
            "href": "/programming-language/C/数组",
            "docId": "C/数组"
          },
          {
            "type": "link",
            "label": "字符串",
            "href": "/programming-language/C/字符串",
            "docId": "C/字符串"
          },
          {
            "type": "link",
            "label": "内存管理",
            "href": "/programming-language/C/内存管理",
            "docId": "C/内存管理"
          },
          {
            "type": "link",
            "label": "Struct 结构",
            "href": "/programming-language/C/Struct 结构",
            "docId": "C/Struct 结构"
          },
          {
            "type": "link",
            "label": "Typedef 命令",
            "href": "/programming-language/C/Typedef 命令",
            "docId": "C/Typedef 命令"
          },
          {
            "type": "link",
            "label": "Union 结构",
            "href": "/programming-language/C/Union 结构",
            "docId": "C/Union 结构"
          },
          {
            "type": "link",
            "label": "Enum 类型",
            "href": "/programming-language/C/Enum 类型",
            "docId": "C/Enum 类型"
          },
          {
            "type": "link",
            "label": "预处理器",
            "href": "/programming-language/C/预处理器",
            "docId": "C/预处理器"
          },
          {
            "type": "link",
            "label": "IO 函数",
            "href": "/programming-language/C/IO 函数",
            "docId": "C/IO 函数"
          },
          {
            "type": "link",
            "label": "文件操作",
            "href": "/programming-language/C/文件操作",
            "docId": "C/文件操作"
          },
          {
            "type": "link",
            "label": "变量说明符",
            "href": "/programming-language/C/变量说明符",
            "docId": "C/变量说明符"
          },
          {
            "type": "link",
            "label": "多文件项目",
            "href": "/programming-language/C/多文件项目",
            "docId": "C/多文件项目"
          },
          {
            "type": "link",
            "label": "命令行环境",
            "href": "/programming-language/C/命令行环境",
            "docId": "C/命令行环境"
          },
          {
            "type": "link",
            "label": "多字节字符",
            "href": "/programming-language/C/多字节字符",
            "docId": "C/多字节字符"
          },
          {
            "type": "category",
            "label": "lib 标准库",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "assert.h",
                "href": "/programming-language/C/lib 标准库/assert.h",
                "docId": "C/lib 标准库/assert.h"
              },
              {
                "type": "link",
                "label": "ctype.h",
                "href": "/programming-language/C/lib 标准库/ctype.h",
                "docId": "C/lib 标准库/ctype.h"
              },
              {
                "type": "link",
                "label": "errno.h",
                "href": "/programming-language/C/lib 标准库/errno.h",
                "docId": "C/lib 标准库/errno.h"
              },
              {
                "type": "link",
                "label": "float.h",
                "href": "/programming-language/C/lib 标准库/float.h",
                "docId": "C/lib 标准库/float.h"
              },
              {
                "type": "link",
                "label": "inttypes.h",
                "href": "/programming-language/C/lib 标准库/inttypes.h",
                "docId": "C/lib 标准库/inttypes.h"
              },
              {
                "type": "link",
                "label": "iso646.h",
                "href": "/programming-language/C/lib 标准库/iso646.h",
                "docId": "C/lib 标准库/iso646.h"
              },
              {
                "type": "link",
                "label": "limits.h",
                "href": "/programming-language/C/lib 标准库/limits.h",
                "docId": "C/lib 标准库/limits.h"
              },
              {
                "type": "link",
                "label": "locale.h",
                "href": "/programming-language/C/lib 标准库/locale.h",
                "docId": "C/lib 标准库/locale.h"
              },
              {
                "type": "link",
                "label": "math.h",
                "href": "/programming-language/C/lib 标准库/math.h",
                "docId": "C/lib 标准库/math.h"
              },
              {
                "type": "link",
                "label": "signal.h",
                "href": "/programming-language/C/lib 标准库/signal.h",
                "docId": "C/lib 标准库/signal.h"
              },
              {
                "type": "link",
                "label": "stdarg.h",
                "href": "/programming-language/C/lib 标准库/stdarg.h",
                "docId": "C/lib 标准库/stdarg.h"
              },
              {
                "type": "link",
                "label": "stdbool.h",
                "href": "/programming-language/C/lib 标准库/stdbool.h",
                "docId": "C/lib 标准库/stdbool.h"
              },
              {
                "type": "link",
                "label": "stddef.h",
                "href": "/programming-language/C/lib 标准库/stddef.h",
                "docId": "C/lib 标准库/stddef.h"
              },
              {
                "type": "link",
                "label": "stdint.h",
                "href": "/programming-language/C/lib 标准库/stdint.h",
                "docId": "C/lib 标准库/stdint.h"
              },
              {
                "type": "link",
                "label": "stdio.h",
                "href": "/programming-language/C/lib 标准库/stdio.h",
                "docId": "C/lib 标准库/stdio.h"
              },
              {
                "type": "link",
                "label": "stdlib.h",
                "href": "/programming-language/C/lib 标准库/stdlib.h",
                "docId": "C/lib 标准库/stdlib.h"
              },
              {
                "type": "link",
                "label": "string.h",
                "href": "/programming-language/C/lib 标准库/string.h",
                "docId": "C/lib 标准库/string.h"
              },
              {
                "type": "link",
                "label": "time.h",
                "href": "/programming-language/C/lib 标准库/time.h",
                "docId": "C/lib 标准库/time.h"
              },
              {
                "type": "link",
                "label": "wchar.h",
                "href": "/programming-language/C/lib 标准库/wchar.h",
                "docId": "C/lib 标准库/wchar.h"
              },
              {
                "type": "link",
                "label": "wctype.h",
                "href": "/programming-language/C/lib 标准库/wctype.h",
                "docId": "C/lib 标准库/wctype.h"
              }
            ]
          }
        ]
      },
      {
        "type": "category",
        "label": "C++",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "简介",
            "href": "/programming-language/C++/简介",
            "docId": "C++/简介"
          },
          {
            "type": "link",
            "label": "基本语法",
            "href": "/programming-language/C++/基本语法",
            "docId": "C++/基本语法"
          },
          {
            "type": "link",
            "label": "控制语句",
            "href": "/programming-language/C++/控制语句",
            "docId": "C++/控制语句"
          },
          {
            "type": "link",
            "label": "函数方法",
            "href": "/programming-language/C++/函数方法",
            "docId": "C++/函数方法"
          },
          {
            "type": "link",
            "label": "面对对象",
            "href": "/programming-language/C++/面对对象",
            "docId": "C++/面对对象"
          }
        ]
      },
      {
        "type": "category",
        "label": "Git",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "category",
            "label": "入门",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "起步",
                "href": "/programming-language/Git/入门/起步",
                "docId": "Git/入门/起步"
              },
              {
                "type": "link",
                "label": "基础",
                "href": "/programming-language/Git/入门/基础",
                "docId": "Git/入门/基础"
              },
              {
                "type": "link",
                "label": "分支",
                "href": "/programming-language/Git/入门/分支",
                "docId": "Git/入门/分支"
              },
              {
                "type": "link",
                "label": "协议",
                "href": "/programming-language/Git/入门/协议",
                "docId": "Git/入门/协议"
              }
            ],
            "href": "/programming-language/category/入门"
          },
          {
            "type": "category",
            "label": "进阶",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "钩子",
                "href": "/programming-language/Git/进阶/钩子",
                "docId": "Git/进阶/钩子"
              },
              {
                "type": "link",
                "label": "工作流",
                "href": "/programming-language/Git/进阶/工作流",
                "docId": "Git/进阶/工作流"
              },
              {
                "type": "link",
                "label": "常用技巧",
                "href": "/programming-language/Git/进阶/常用技巧",
                "docId": "Git/进阶/常用技巧"
              },
              {
                "type": "link",
                "label": "命令示例",
                "href": "/programming-language/Git/进阶/命令示例",
                "docId": "Git/进阶/命令示例"
              },
              {
                "type": "link",
                "label": "参考手册",
                "href": "/programming-language/Git/进阶/参考手册",
                "docId": "Git/进阶/参考手册"
              }
            ],
            "href": "/programming-language/category/进阶"
          },
          {
            "type": "category",
            "label": "高级",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "category",
                "label": "协作规范",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "link",
                    "label": "分支（Branch）",
                    "href": "/programming-language/Git/高级/协作规范/分支（Branch）",
                    "docId": "Git/高级/协作规范/分支（Branch）"
                  },
                  {
                    "type": "link",
                    "label": "注释（Comments）",
                    "href": "/programming-language/Git/高级/协作规范/注释（Comments）",
                    "docId": "Git/高级/协作规范/注释（Comments）"
                  },
                  {
                    "type": "link",
                    "label": "日志（Commit）",
                    "href": "/programming-language/Git/高级/协作规范/日志（Commit）",
                    "docId": "Git/高级/协作规范/日志（Commit）"
                  },
                  {
                    "type": "link",
                    "label": "版本（Tag）",
                    "href": "/programming-language/Git/高级/协作规范/版本（Tag）",
                    "docId": "Git/高级/协作规范/版本（Tag）"
                  },
                  {
                    "type": "link",
                    "label": "关于（Readme）",
                    "href": "/programming-language/Git/高级/协作规范/关于（Readme）",
                    "docId": "Git/高级/协作规范/关于（Readme）"
                  },
                  {
                    "type": "link",
                    "label": "交流反馈（Issue）",
                    "href": "/programming-language/Git/高级/协作规范/交流反馈（Issue）",
                    "docId": "Git/高级/协作规范/交流反馈（Issue）"
                  },
                  {
                    "type": "link",
                    "label": "贡献者协议（Contributing）",
                    "href": "/programming-language/Git/高级/协作规范/贡献者协议（Contributing）",
                    "docId": "Git/高级/协作规范/贡献者协议（Contributing）"
                  },
                  {
                    "type": "link",
                    "label": "开源协议（License）",
                    "href": "/programming-language/Git/高级/协作规范/开源协议（License）",
                    "docId": "Git/高级/协作规范/开源协议（License）"
                  }
                ],
                "href": "/programming-language/category/协作规范"
              },
              {
                "type": "category",
                "label": "Github",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "link",
                    "label": "GitHub 奇技淫巧",
                    "href": "/programming-language/Git/高级/Github/GitHub 奇技淫巧",
                    "docId": "Git/高级/Github/GitHub 奇技淫巧"
                  }
                ],
                "href": "/programming-language/category/github"
              }
            ],
            "href": "/programming-language/category/高级"
          }
        ]
      },
      {
        "type": "category",
        "label": "Java",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "简介",
            "href": "/programming-language/Java/简介",
            "docId": "Java/简介"
          },
          {
            "type": "link",
            "label": "基本语法",
            "href": "/programming-language/Java/基本语法",
            "docId": "Java/基本语法"
          },
          {
            "type": "link",
            "label": "控制语句",
            "href": "/programming-language/Java/控制语句",
            "docId": "Java/控制语句"
          },
          {
            "type": "link",
            "label": "面对对象",
            "href": "/programming-language/Java/面对对象",
            "docId": "Java/面对对象"
          }
        ]
      },
      {
        "type": "category",
        "label": "JavaScript",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "包管理工具",
            "href": "/programming-language/JavaScript/包管理工具",
            "docId": "JavaScript/包管理工具"
          }
        ]
      },
      {
        "type": "category",
        "label": "MySQL",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "数据库概述",
            "href": "/programming-language/MySQL/数据库概述",
            "docId": "MySQL/数据库概述"
          },
          {
            "type": "link",
            "label": "SQL 语句",
            "href": "/programming-language/MySQL/SQL 语句",
            "docId": "MySQL/SQL 语句"
          },
          {
            "type": "link",
            "label": "SQL 函数",
            "href": "/programming-language/MySQL/SQL 函数",
            "docId": "MySQL/SQL 函数"
          },
          {
            "type": "link",
            "label": "数据表约束",
            "href": "/programming-language/MySQL/数据表约束",
            "docId": "MySQL/数据表约束"
          },
          {
            "type": "link",
            "label": "数据库查询",
            "href": "/programming-language/MySQL/数据库查询",
            "docId": "MySQL/数据库查询"
          },
          {
            "type": "link",
            "label": "数据库事务",
            "href": "/programming-language/MySQL/数据库事务",
            "docId": "MySQL/数据库事务"
          },
          {
            "type": "link",
            "label": "数据库规范",
            "href": "/programming-language/MySQL/数据库规范",
            "docId": "MySQL/数据库规范"
          }
        ]
      },
      {
        "type": "category",
        "label": "Python",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "category",
            "label": "文化",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "发展历史",
                "href": "/programming-language/Python/文化/发展历史",
                "docId": "Python/文化/发展历史"
              },
              {
                "type": "link",
                "label": "设计哲学",
                "href": "/programming-language/Python/文化/设计哲学",
                "docId": "Python/文化/设计哲学"
              },
              {
                "type": "link",
                "label": "语言特性",
                "href": "/programming-language/Python/文化/语言特性",
                "docId": "Python/文化/语言特性"
              },
              {
                "type": "link",
                "label": "生命周期",
                "href": "/programming-language/Python/文化/生命周期",
                "docId": "Python/文化/生命周期"
              },
              {
                "type": "link",
                "label": "社区文化",
                "href": "/programming-language/Python/文化/社区文化",
                "docId": "Python/文化/社区文化"
              }
            ],
            "href": "/programming-language/category/文化"
          },
          {
            "type": "category",
            "label": "入门",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "简介",
                "href": "/programming-language/Python/入门/简介",
                "docId": "Python/入门/简介"
              },
              {
                "type": "link",
                "label": "基本语法",
                "href": "/programming-language/Python/入门/基本语法",
                "docId": "Python/入门/基本语法"
              },
              {
                "type": "link",
                "label": "控制语句",
                "href": "/programming-language/Python/入门/控制语句",
                "docId": "Python/入门/控制语句"
              },
              {
                "type": "link",
                "label": "数据结构",
                "href": "/programming-language/Python/入门/数据结构",
                "docId": "Python/入门/数据结构"
              },
              {
                "type": "link",
                "label": "函数方法",
                "href": "/programming-language/Python/入门/函数方法",
                "docId": "Python/入门/函数方法"
              },
              {
                "type": "link",
                "label": "面对对象",
                "href": "/programming-language/Python/入门/面对对象",
                "docId": "Python/入门/面对对象"
              }
            ],
            "href": "/programming-language/category/入门-1"
          }
        ]
      },
      {
        "type": "category",
        "label": "Regex",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "正则表达式入门",
            "href": "/programming-language/Regex/正则表达式入门",
            "docId": "Regex/正则表达式入门"
          },
          {
            "type": "link",
            "label": "常用正则大全",
            "href": "/programming-language/Regex/常用正则大全",
            "docId": "Regex/常用正则大全"
          }
        ]
      }
    ]
  },
  "docs": {
    "C/变量": {
      "id": "C/变量",
      "title": "变量",
      "description": "变量（variable）可以理解成一块内存区域的名字。通过变量名，可以引用这块内存区域，获取里面存储的值。由于值可能发生变化，所以称为变量，否则就是常量了。",
      "sidebar": "tutorialSidebar"
    },
    "C/变量说明符": {
      "id": "C/变量说明符",
      "title": "变量说明符",
      "description": "C 语言允许声明变量的时候，加上一些特定的说明符（specifier），为编译器提供变量行为的额外信息。它的主要作用是帮助编译器优化代码，有时会对程序行为产生影响。",
      "sidebar": "tutorialSidebar"
    },
    "C/多文件项目": {
      "id": "C/多文件项目",
      "title": "多文件项目",
      "description": "简介",
      "sidebar": "tutorialSidebar"
    },
    "C/多字节字符": {
      "id": "C/多字节字符",
      "title": "多字节字符",
      "description": "本章介绍 C 语言如何处理非英语字符。",
      "sidebar": "tutorialSidebar"
    },
    "C/函数": {
      "id": "C/函数",
      "title": "函数",
      "description": "简介",
      "sidebar": "tutorialSidebar"
    },
    "C/简介": {
      "id": "C/简介",
      "title": "简介",
      "description": "历史",
      "sidebar": "tutorialSidebar"
    },
    "C/流程控制": {
      "id": "C/流程控制",
      "title": "流程控制",
      "description": "C 语言的程序是顺序执行，即先执行前面的语句，再执行后面的语句。开发者如果想要控制程序执行的流程，就必须使用流程控制的语法结构，主要是条件执行和循环执行。",
      "sidebar": "tutorialSidebar"
    },
    "C/命令行环境": {
      "id": "C/命令行环境",
      "title": "命令行环境",
      "description": "命令行参数",
      "sidebar": "tutorialSidebar"
    },
    "C/内存管理": {
      "id": "C/内存管理",
      "title": "内存管理",
      "description": "简介",
      "sidebar": "tutorialSidebar"
    },
    "C/数据类型": {
      "id": "C/数据类型",
      "title": "数据类型",
      "description": "C 语言的每一种数据，都是有类型（type）的，编译器必须知道数据的类型，才能操作数据。所谓“类型”，就是相似的数据所拥有的共同特征，那么一旦知道某个值的数据类型，就能知道该值的特征和操作方式。",
      "sidebar": "tutorialSidebar"
    },
    "C/数组": {
      "id": "C/数组",
      "title": "数组",
      "description": "简介",
      "sidebar": "tutorialSidebar"
    },
    "C/文件操作": {
      "id": "C/文件操作",
      "title": "文件操作",
      "description": "本章介绍 C 语言如何操作文件。",
      "sidebar": "tutorialSidebar"
    },
    "C/语法": {
      "id": "C/语法",
      "title": "语法",
      "description": "语句",
      "sidebar": "tutorialSidebar"
    },
    "C/预处理器": {
      "id": "C/预处理器",
      "title": "预处理器",
      "description": "简介",
      "sidebar": "tutorialSidebar"
    },
    "C/运算符": {
      "id": "C/运算符",
      "title": "运算符",
      "description": "C 语言的运算符非常多，一共有 50 多种，可以分成若干类。",
      "sidebar": "tutorialSidebar"
    },
    "C/指针": {
      "id": "C/指针",
      "title": "指针",
      "description": "指针是 C 语言最重要的概念之一，也是最难理解的概念之一。",
      "sidebar": "tutorialSidebar"
    },
    "C/字符串": {
      "id": "C/字符串",
      "title": "字符串",
      "description": "简介",
      "sidebar": "tutorialSidebar"
    },
    "C/Enum 类型": {
      "id": "C/Enum 类型",
      "title": "Enum 类型",
      "description": "如果一种数据类型的取值只有少数几种可能，并且每种取值都有自己的含义，为了提高代码的可读性，可以将它们定义为 Enum 类型，中文名为枚举。",
      "sidebar": "tutorialSidebar"
    },
    "C/IO 函数": {
      "id": "C/IO 函数",
      "title": "IO 函数",
      "description": "C 语言提供了一些函数，用于与外部设备通信，称为输入输出函数，简称 I/O 函数。输入（import）指的是获取外部数据，输出（export）指的是向外部传递数据。",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/assert.h": {
      "id": "C/lib 标准库/assert.h",
      "title": "assert.h",
      "description": "assert()",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/ctype.h": {
      "id": "C/lib 标准库/ctype.h",
      "title": "ctype.h",
      "description": "ctype.h头文件定义了一系列字符处理函数的原型。",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/errno.h": {
      "id": "C/lib 标准库/errno.h",
      "title": "errno.h",
      "description": "errno 变量",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/float.h": {
      "id": "C/lib 标准库/float.h",
      "title": "float.h",
      "description": "float.h定义了浮点数类型 float、double、long double 的一些宏，规定了这些类型的范围和精度。",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/inttypes.h": {
      "id": "C/lib 标准库/inttypes.h",
      "title": "inttypes.h",
      "description": "C 语言还在头文件 inttypes.h 里面，为 stdint.h 定义的四类整数类型，提供了printf()和scanf()的占位符。",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/iso646.h": {
      "id": "C/lib 标准库/iso646.h",
      "title": "iso646.h",
      "description": "iso646.h头文件指定了一些常见运算符的替代拼写。比如，它用关键字and代替逻辑运算符&&。",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/limits.h": {
      "id": "C/lib 标准库/limits.h",
      "title": "limits.h",
      "description": "limits.h提供了用来定义各种整数类型（包括字符类型）取值范围的宏。",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/locale.h": {
      "id": "C/lib 标准库/locale.h",
      "title": "locale.h",
      "description": "简介",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/math.h": {
      "id": "C/lib 标准库/math.h",
      "title": "math.h",
      "description": "math.h头文件提供了很多数学函数。",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/signal.h": {
      "id": "C/lib 标准库/signal.h",
      "title": "signal.h",
      "description": "简介",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/stdarg.h": {
      "id": "C/lib 标准库/stdarg.h",
      "title": "stdarg.h",
      "description": "stdarg.h定义于函数的可变参数相关的一些方法。",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/stdbool.h": {
      "id": "C/lib 标准库/stdbool.h",
      "title": "stdbool.h",
      "description": "stdbool.h头文件定义了4个宏。",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/stddef.h": {
      "id": "C/lib 标准库/stddef.h",
      "title": "stddef.h",
      "description": "stddef.h提供了常用类型和宏的定义，但没有声明任何函数。",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/stdint.h": {
      "id": "C/lib 标准库/stdint.h",
      "title": "stdint.h",
      "description": "固定宽度的整数类型",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/stdio.h": {
      "id": "C/lib 标准库/stdio.h",
      "title": "stdio.h",
      "description": "stdio.h是 C 语言的标准 I/O 库，用于读取和写入文件，也用于控制台的输入和输出。",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/stdlib.h": {
      "id": "C/lib 标准库/stdlib.h",
      "title": "stdlib.h",
      "description": "类型别名和宏",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/string.h": {
      "id": "C/lib 标准库/string.h",
      "title": "string.h",
      "description": "string.h主要定义了字符串处理函数和内存操作函数。",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/time.h": {
      "id": "C/lib 标准库/time.h",
      "title": "time.h",
      "description": "time_t",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/wchar.h": {
      "id": "C/lib 标准库/wchar.h",
      "title": "wchar.h",
      "description": "宽字符使用两个或四个字节表示一个字符，导致 C 语言常规的字符处理函数都会失效。wchar.h 定义了许多宽字符专用的处理函数。",
      "sidebar": "tutorialSidebar"
    },
    "C/lib 标准库/wctype.h": {
      "id": "C/lib 标准库/wctype.h",
      "title": "wctype.h",
      "description": "wctype.h 提供 ctype.h 里面函数的宽字符版本。",
      "sidebar": "tutorialSidebar"
    },
    "C/Struct 结构": {
      "id": "C/Struct 结构",
      "title": "Struct 结构",
      "description": "简介",
      "sidebar": "tutorialSidebar"
    },
    "C/Typedef 命令": {
      "id": "C/Typedef 命令",
      "title": "Typedef 命令",
      "description": "简介",
      "sidebar": "tutorialSidebar"
    },
    "C/Union 结构": {
      "id": "C/Union 结构",
      "title": "Union 结构",
      "description": "有时需要一种数据结构，不同的场合表示不同的数据类型。比如，如果只用一种数据结构表示水果的“量”，这种结构就需要有时是整数（6个苹果），有时是浮点数（1.5公斤草莓）。",
      "sidebar": "tutorialSidebar"
    },
    "C++/函数方法": {
      "id": "C++/函数方法",
      "title": "函数方法",
      "description": "函数",
      "sidebar": "tutorialSidebar"
    },
    "C++/基本语法": {
      "id": "C++/基本语法",
      "title": "基本语法",
      "description": "C++ 程序可以定义为对象的集合，这些对象通过调用彼此的方法进行交互。现在让我们简要地看一下什么是类、对象，方法、即时变量。",
      "sidebar": "tutorialSidebar"
    },
    "C++/简介": {
      "id": "C++/简介",
      "title": "简介",
      "description": "简介",
      "sidebar": "tutorialSidebar"
    },
    "C++/控制语句": {
      "id": "C++/控制语句",
      "title": "控制语句",
      "description": "条件语句",
      "sidebar": "tutorialSidebar"
    },
    "C++/面对对象": {
      "id": "C++/面对对象",
      "title": "面对对象",
      "description": "C++ 在 C 语言的基础上增加了面向对象编程，C++ 支持面向对象程序设计。类是 C++ 的核心特性，通常被称为用户定义的类型。",
      "sidebar": "tutorialSidebar"
    },
    "Git/高级/协作规范/版本（Tag）": {
      "id": "Git/高级/协作规范/版本（Tag）",
      "title": "版本（Tag）",
      "description": "规范",
      "sidebar": "tutorialSidebar"
    },
    "Git/高级/协作规范/分支（Branch）": {
      "id": "Git/高级/协作规范/分支（Branch）",
      "title": "分支（Branch）",
      "description": "规范",
      "sidebar": "tutorialSidebar"
    },
    "Git/高级/协作规范/贡献者协议（Contributing）": {
      "id": "Git/高级/协作规范/贡献者协议（Contributing）",
      "title": "贡献者协议（Contributing）",
      "description": "规范",
      "sidebar": "tutorialSidebar"
    },
    "Git/高级/协作规范/关于（Readme）": {
      "id": "Git/高级/协作规范/关于（Readme）",
      "title": "关于（Readme）",
      "description": "规范",
      "sidebar": "tutorialSidebar"
    },
    "Git/高级/协作规范/交流反馈（Issue）": {
      "id": "Git/高级/协作规范/交流反馈（Issue）",
      "title": "交流反馈（Issue）",
      "description": "规范",
      "sidebar": "tutorialSidebar"
    },
    "Git/高级/协作规范/开源协议（License）": {
      "id": "Git/高级/协作规范/开源协议（License）",
      "title": "开源协议（License）",
      "description": "规范",
      "sidebar": "tutorialSidebar"
    },
    "Git/高级/协作规范/日志（Commit）": {
      "id": "Git/高级/协作规范/日志（Commit）",
      "title": "日志（Commit）",
      "description": "规范",
      "sidebar": "tutorialSidebar"
    },
    "Git/高级/协作规范/注释（Comments）": {
      "id": "Git/高级/协作规范/注释（Comments）",
      "title": "注释（Comments）",
      "description": "规范",
      "sidebar": "tutorialSidebar"
    },
    "Git/高级/Github/GitHub 奇技淫巧": {
      "id": "Git/高级/Github/GitHub 奇技淫巧",
      "title": "GitHub 奇技淫巧",
      "description": "GitHub 奇技淫巧",
      "sidebar": "tutorialSidebar"
    },
    "Git/进阶/参考手册": {
      "id": "Git/进阶/参考手册",
      "title": "参考手册",
      "description": "Git 参考手册",
      "sidebar": "tutorialSidebar"
    },
    "Git/进阶/常用技巧": {
      "id": "Git/进阶/常用技巧",
      "title": "常用技巧",
      "description": "Git 常用技巧",
      "sidebar": "tutorialSidebar"
    },
    "Git/进阶/工作流": {
      "id": "Git/进阶/工作流",
      "title": "工作流",
      "description": "Git 协作工作流",
      "sidebar": "tutorialSidebar"
    },
    "Git/进阶/钩子": {
      "id": "Git/进阶/钩子",
      "title": "钩子",
      "description": "Git 钩子",
      "sidebar": "tutorialSidebar"
    },
    "Git/进阶/命令示例": {
      "id": "Git/进阶/命令示例",
      "title": "命令示例",
      "description": "Git 命令示例",
      "sidebar": "tutorialSidebar"
    },
    "Git/入门/分支": {
      "id": "Git/入门/分支",
      "title": "分支",
      "description": "Git 分支操作",
      "sidebar": "tutorialSidebar"
    },
    "Git/入门/基础": {
      "id": "Git/入门/基础",
      "title": "基础",
      "description": "Git 基础操作",
      "sidebar": "tutorialSidebar"
    },
    "Git/入门/起步": {
      "id": "Git/入门/起步",
      "title": "起步",
      "description": "Git 起步",
      "sidebar": "tutorialSidebar"
    },
    "Git/入门/协议": {
      "id": "Git/入门/协议",
      "title": "协议",
      "description": "Git 常见协议",
      "sidebar": "tutorialSidebar"
    },
    "home": {
      "id": "home",
      "title": "Home",
      "description": "TIOBE 榜单",
      "sidebar": "tutorialSidebar"
    },
    "Java/基本语法": {
      "id": "Java/基本语法",
      "title": "基本语法",
      "description": "数据类型",
      "sidebar": "tutorialSidebar"
    },
    "Java/简介": {
      "id": "Java/简介",
      "title": "简介",
      "description": "Java 是什么",
      "sidebar": "tutorialSidebar"
    },
    "Java/控制语句": {
      "id": "Java/控制语句",
      "title": "控制语句",
      "description": "Java 中的控制语句其实和 C 一样，会涉及刀包括 if-else、while、do-while、for、return、break、switch。",
      "sidebar": "tutorialSidebar"
    },
    "Java/面对对象": {
      "id": "Java/面对对象",
      "title": "面对对象",
      "description": "在 Java 中，万事万物都是对象。 Java 也是面对对象的高级编程语言，面对对象语言具有如下特征",
      "sidebar": "tutorialSidebar"
    },
    "JavaScript/包管理工具": {
      "id": "JavaScript/包管理工具",
      "title": "包管理工具",
      "description": "JavaScript 包管理工具",
      "sidebar": "tutorialSidebar"
    },
    "MySQL/数据表约束": {
      "id": "MySQL/数据表约束",
      "title": "数据表约束",
      "description": "数据表行数据约束",
      "sidebar": "tutorialSidebar"
    },
    "MySQL/数据库查询": {
      "id": "MySQL/数据库查询",
      "title": "数据库查询",
      "description": "数据表数据查询",
      "sidebar": "tutorialSidebar"
    },
    "MySQL/数据库概述": {
      "id": "MySQL/数据库概述",
      "title": "数据库概述",
      "description": "数据库概述",
      "sidebar": "tutorialSidebar"
    },
    "MySQL/数据库规范": {
      "id": "MySQL/数据库规范",
      "title": "数据库规范",
      "description": "数据库规范",
      "sidebar": "tutorialSidebar"
    },
    "MySQL/数据库事务": {
      "id": "MySQL/数据库事务",
      "title": "数据库事务",
      "description": "数据库事务",
      "sidebar": "tutorialSidebar"
    },
    "MySQL/SQL 函数": {
      "id": "MySQL/SQL 函数",
      "title": "SQL 函数",
      "description": "SQL 函数",
      "sidebar": "tutorialSidebar"
    },
    "MySQL/SQL 语句": {
      "id": "MySQL/SQL 语句",
      "title": "SQL 语句",
      "description": "SQL 语句",
      "sidebar": "tutorialSidebar"
    },
    "Python/入门/函数方法": {
      "id": "Python/入门/函数方法",
      "title": "函数方法",
      "description": "通过白盒/黑盒封装多行代码的实现，一般情况下拥有输入和输出，用来简化代码、重复调用和模块化编程。",
      "sidebar": "tutorialSidebar"
    },
    "Python/入门/基本语法": {
      "id": "Python/入门/基本语法",
      "title": "基本语法",
      "description": "数据类型",
      "sidebar": "tutorialSidebar"
    },
    "Python/入门/简介": {
      "id": "Python/入门/简介",
      "title": "简介",
      "description": "简介",
      "sidebar": "tutorialSidebar"
    },
    "Python/入门/控制语句": {
      "id": "Python/入门/控制语句",
      "title": "控制语句",
      "description": "判断",
      "sidebar": "tutorialSidebar"
    },
    "Python/入门/面对对象": {
      "id": "Python/入门/面对对象",
      "title": "面对对象",
      "description": "把一组数据结构和处理它们的方法组成对象（object），把相同行为的对象归纳为类（class），通过类的封装（encapsulation）隐藏内部细节，通过继承（inheritance）实现类的特化（specialization）和泛化（generalization），通过多态（polymorphism）实现基于对象类型的动态分派",
      "sidebar": "tutorialSidebar"
    },
    "Python/入门/数据结构": {
      "id": "Python/入门/数据结构",
      "title": "数据结构",
      "description": "字符串",
      "sidebar": "tutorialSidebar"
    },
    "Python/文化/发展历史": {
      "id": "Python/文化/发展历史",
      "title": "发展历史",
      "description": "Python的历史由来",
      "sidebar": "tutorialSidebar"
    },
    "Python/文化/设计哲学": {
      "id": "Python/文化/设计哲学",
      "title": "设计哲学",
      "description": "Python 的设计哲学",
      "sidebar": "tutorialSidebar"
    },
    "Python/文化/社区文化": {
      "id": "Python/文化/社区文化",
      "title": "社区文化",
      "description": "Python 的社区文化",
      "sidebar": "tutorialSidebar"
    },
    "Python/文化/生命周期": {
      "id": "Python/文化/生命周期",
      "title": "生命周期",
      "description": "Python 版本生命周期",
      "sidebar": "tutorialSidebar"
    },
    "Python/文化/语言特性": {
      "id": "Python/文化/语言特性",
      "title": "语言特性",
      "description": "Python 的语言特性",
      "sidebar": "tutorialSidebar"
    },
    "Regex/常用正则大全": {
      "id": "Regex/常用正则大全",
      "title": "常用正则大全",
      "description": "- regex101（测试工具）",
      "sidebar": "tutorialSidebar"
    },
    "Regex/正则表达式入门": {
      "id": "Regex/正则表达式入门",
      "title": "正则表达式入门",
      "description": "正则表达式是一组由字母和符号组成的特殊文本, 它可以用来从文本中找出满足你想要的格式的句子.",
      "sidebar": "tutorialSidebar"
    }
  }
}